{"version":3,"sources":["components/Glcm.js","components/MakeRandomMatrix.js","components/GlcmProperties.js","components/SetMatrix.js","App.js","reportWebVitals.js","index.js"],"names":["Glcm","params","useState","glcmArray","forceUpdate","setForceUpdate","matrix","i","j","c","r","degreeValue","randomMatrix","length","distanceValue","undefined","assign","initialInputColour","ii","innerInputColour","jj","push","inputColour","setInputColour","w","q","GlcmColour","findColoured","id","onClick","arr","setGlcmColour","assign0ToOutputColour","array","innerColourGlcm","assign0ToInputColour","className","style","map","item","index","innerItem","innerIndex","string","bgcolor","newColourMatrix","hexValues","hex","Math","floor","random","changeColour","MakeRandomMatrix","x","y","generatedArray","innerArray","GlcmProperties","align","diameter","min","max","step","value","theme","defaultColor","activeColor","onValueChange","setDegreeValue","ariaLabelledBy","cols","rows","setDistanceValue","SetMatrix","type","onChange","customRows","htmlFor","customCols","setMatrix","App","setRows","setCols","setDistnceValue","colourGlcm","setRandomMatrix","event","num","parseInt","target","isNaN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0560534a.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nvar Glcm=(params)=>{\r\n    var [glcmArray,setGlcmArray]=useState( [ \r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0]\r\n    ]);\r\n    var [forceUpdate,setForceUpdate]=useState(0);\r\n    var assign0=()=>{\r\n        glcmArray= [ \r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0]\r\n        ]\r\n    }\r\n   \r\n\r\n    var changeColour=(index,innerIndex)=>{\r\n        let newColourMatrix=params.GlcmColour;\r\n        const hexValues = [0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F'];\r\n        let hex = '#';\r\n        for(let i = 0; i < 6; i++){\r\n            const index = Math.floor(Math.random() * hexValues.length)\r\n            hex += hexValues[index];\r\n        }\r\n        \r\n        setForceUpdate(forceUpdate===hex?\"\":hex);\r\n        newColourMatrix[index][innerIndex]=newColourMatrix[index][innerIndex]===\"#FFFFFF\"?hex:\"#FFFFFF\";\r\n        params.setGlcmColour(newColourMatrix);\r\n    }\r\n\r\n    var assign=(matrix)=>{\r\n        var i,j,c,r;\r\n        if(params)\r\n            if(params.degreeValue===0){\r\n                for(i=0;i<params.randomMatrix.length;i++)\r\n                    for(j=0;j<params.randomMatrix[i].length-params.distanceValue+1;j++){\r\n                        c=params.randomMatrix[i][j];\r\n                        r=params.randomMatrix[i][j+params.distanceValue-1];\r\n                        if(c!==undefined)\r\n                            matrix[r-1][c-1]+=1;\r\n                    }\r\n            }\r\n            else if(params.degreeValue===90){\r\n                for(i=0;i<params.randomMatrix[0].length;i++)\r\n                    for(j=0;j<params.randomMatrix.length-params.distanceValue+1;j++){\r\n                        c=params.randomMatrix[j][i];\r\n                        r=params.randomMatrix[j+params.distanceValue-1][i];\r\n                        if(c!==undefined)\r\n                            matrix[r-1][c-1]+=1;\r\n                    }\r\n            }\r\n            else if(params.degreeValue===45){\r\n                for(i=params.distanceValue-1;i<params.randomMatrix.length;i++)\r\n                    for(j=0;j<params.randomMatrix[i].length-params.distanceValue+1;j++){\r\n                        c=params.randomMatrix[i-params.distanceValue+1][j+params.distanceValue-1];\r\n                        r=params.randomMatrix[i][j];\r\n                        if(c!==undefined)\r\n                            matrix[r-1][c-1]+=1;\r\n                    }\r\n            }\r\n            else if(params.degreeValue===135){\r\n                for(i=0;i<params.randomMatrix.length-params.distanceValue+1;i++)\r\n                    for(j=0;j<params.randomMatrix[i].length-params.distanceValue+1;j++){\r\n                        c=params.randomMatrix[i][j];\r\n                        r=params.randomMatrix[i+params.distanceValue-1][j+params.distanceValue-1];\r\n                        if(c!==undefined)\r\n                            matrix[r-1][c-1]+=1;\r\n                    }\r\n            }\r\n    }\r\n    assign0();\r\n    assign(glcmArray);\r\n    \r\n    var initialInputColour=[]\r\n    for(var ii=0;ii<params.randomMatrix.length;ii++){\r\n        let innerInputColour=[]\r\n        for(var jj=0;jj<params.randomMatrix[ii].length;jj++){\r\n            innerInputColour.push(\"#FFFFFF\");\r\n        }\r\n        initialInputColour.push(innerInputColour);\r\n    }\r\n    var [inputColour, setInputColour]=useState(initialInputColour)\r\n    var findColoured=()=>{\r\n        var w,q;\r\n        for(var i=0;i<8;i++){\r\n            for(var j=0;j<8;j++){\r\n                if(params.GlcmColour[i][j]!==\"#FFFFFF\"){\r\n                    if(params.degreeValue===0){\r\n                        for(q=0;q<params.randomMatrix.length;q++){\r\n                            for(w=0;w<params.randomMatrix[q].length-params.distanceValue+1;w++){\r\n                                if(params.randomMatrix[q][w]===j+1&&params.randomMatrix[q][w+params.distanceValue-1]===i+1){\r\n                                    inputColour[q][w]=params.GlcmColour[i][j];\r\n                                    inputColour[q][w+params.distanceValue-1]=params.GlcmColour[i][j];                                    \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(params.degreeValue===90){\r\n                        for(q=0;q<params.randomMatrix.length-params.distanceValue+1;q++){\r\n                            for(w=0;w<params.randomMatrix[q].length;w++){\r\n                                if(params.randomMatrix[q][w]===j+1&&params.randomMatrix[q+params.distanceValue-1][w]===i+1){\r\n                                    inputColour[q][w]=params.GlcmColour[i][j];\r\n                                    inputColour[q+params.distanceValue-1][w]=params.GlcmColour[i][j];                                    \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(params.degreeValue===45){\r\n                        for(q=params.distanceValue-1;q<params.randomMatrix.length;q++){\r\n                            for(w=0;w<params.randomMatrix[q].length-params.distanceValue+1;w++){\r\n                                if(params.randomMatrix[q][w]===i+1&&params.randomMatrix[q-params.distanceValue+1][w+params.distanceValue-1]===j+1){\r\n                                    inputColour[q][w]=params.GlcmColour[i][j];\r\n                                    inputColour[q-params.distanceValue+1][w+params.distanceValue-1]=params.GlcmColour[i][j];                                    \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(params.degreeValue===135){\r\n                        for(q=0;q<params.randomMatrix.length-params.distanceValue+1;q++){\r\n                            for(w=0;w<params.randomMatrix[q].length-params.distanceValue+1;w++){\r\n                                if(params.randomMatrix[q][w]===j+1&&params.randomMatrix[q+params.distanceValue-1][w+params.distanceValue-1]===i+1){\r\n                                    inputColour[q][w]=params.GlcmColour[i][j];\r\n                                    inputColour[q+params.distanceValue-1][w+params.distanceValue-1]=params.GlcmColour[i][j];                                    \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    findColoured()\r\n\r\n    var assign0ToInputColour=(array)=>{\r\n        for(var ii=0;ii<8;ii++){\r\n            let innerColourGlcm=[]\r\n            for(var jj=0;jj<8;jj++)\r\n                innerColourGlcm.push(`#FFFFFF`)\r\n            array[ii]=innerColourGlcm;\r\n        }\r\n        setInputColour(array);\r\n    }\r\n\r\n    var assign0ToOutputColour=()=>{\r\n        let arr=params.GlcmColour;\r\n        for(var i=0;i<arr.length;i++)\r\n            for(var j=0;j<arr[i].length;j++)\r\n                arr[i][j]=\"#FFFFFF\"\r\n        params.setGlcmColour(arr);\r\n    }\r\n\r\n    var clearColour=()=>{\r\n        assign0ToOutputColour();\r\n        assign0ToInputColour(inputColour);\r\n        setForceUpdate(forceUpdate+\"_\")\r\n\r\n    }\r\n\r\n    return(\r\n        <div id=\"input\">\r\n            <div>\r\n                <div>\r\n                    <button onClick={clearColour} className=\"btn btn-success align-self-start\">Clear Colours</button>\r\n                </div>\r\n            <table style={{'margin':'20px'}}>\r\n                <tbody>\r\n                    {params.randomMatrix.map((item,index)=>{\r\n                        return(\r\n                            <tr key={index}>\r\n                                {item.map((innerItem,innerIndex)=>{\r\n                                    var string=index+\"_\"+innerIndex\r\n                                    return(\r\n                                        <td key={string} \r\n                                            bgcolor={inputColour[index][innerIndex]}\r\n                                            style={{\"borderWidth\":\"2px\", 'borderColor':\"#000000\", 'borderStyle':'solid','padding':'10px','margin':'0px'}}\r\n                                        >\r\n                                            {innerItem}\r\n                                        </td>\r\n                                    )\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n            <div>\r\n                <table style={{'margin':'20px'}}>\r\n                    <tbody>\r\n                        <tr key=\"column_number\">\r\n                            {\r\n                                glcmArray[0].map((item,index)=>\r\n                                    <td key={index} style={{'padding':'10px','margin':'0px'}}>{index+1}</td>\r\n                                )\r\n                            }\r\n                        </tr>\r\n                        {glcmArray.map((item,index)=>{\r\n                            return( \r\n                                <tr key={index}>\r\n                                    {item.map((innerItem,innerIndex)=>{\r\n                                        var string=index+\"_\"+innerIndex\r\n                                        return(\r\n                                            <td key={string} \r\n                                                style={{\"borderWidth\":\"2px\", 'borderColor':\"#000000\", 'borderStyle':'solid','padding':'10px','margin':'0px'}}\r\n                                                bgcolor={params.GlcmColour[index][innerIndex]}\r\n                                                onClick={()=>changeColour(index,innerIndex)}\r\n                                            >\r\n                                                {innerItem}\r\n                                            </td>\r\n                                        )\r\n                                    })}\r\n                                    <td key=\"row_number\" style={{'padding':'10px','margin':'0px'}}>{index+1}</td>\r\n\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>    )\r\n}\r\n\r\nexport default Glcm;","var MakeRandomMatrix=(x,y)=>{\r\n  var generatedArray = []\r\n  for(var i=0;i<x;i++){\r\n    var innerArray = []\r\n    for(var j=0;j<y;j++){\r\n      innerArray.push(Math.floor(Math.random() * 8) + 1);\r\n    }\r\n    generatedArray.push(innerArray)\r\n  }\r\n  return generatedArray\r\n};\r\n\r\nexport default MakeRandomMatrix;","import { Basic } from 'react-dial-knob';\r\n\r\nvar GlcmProperties=(params)=>{\r\n    return(\r\n        <div className=\"mt-3 m-sm-5 border p-4 p-sm-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h2>GLCM Properties</h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className='col-2'></div>\r\n            <div className='col-4' align='center'>\r\n              <div>\r\n                <Basic diameter={100} min={0} max={135} step={45} value={params.degreeValue}\r\n                  theme={{\r\n                      defaultColor: '#333',\r\n                      activeColor: '#f33'\r\n                  }}\r\n                  onValueChange={params.setDegreeValue} ariaLabelledBy={'degree-label'}\r\n                >\r\n                    <label id={'degree-label'}>Degree</label>\r\n                </Basic>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-4' align='center'>\r\n              <div>\r\n                <Basic diameter={100} min={2} \r\n                  max={\r\n                    params.degreeValue===0?params.cols:\r\n                    params.degreeValue===90?params.rows:\r\n                    params.rows>params.cols?params.cols:params.rows\r\n                  } \r\n                  step={1} value={params.distanceValue}\r\n                  theme={{\r\n                      defaultColor: '#333',\r\n                      activeColor: '#f33'\r\n                  }}\r\n                  onValueChange={params.setDistanceValue} ariaLabelledBy={'distance-label'}\r\n                >\r\n                    <label id={'distance-label'}>Distance</label>\r\n                </Basic>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GlcmProperties;","var SetMatrix=(params)=>{\r\n    return(\r\n        <div className=\"mt-3 m-sm-5 border p-4 p-sm-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h2>Matrix Details</h2>\r\n            </div>\r\n          </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-sm-4\">\r\n                <div className=\"form-outline\">\r\n                    <input type=\"text\" id=\"formRows\" className=\"form-control\" value={params.rows<3?3:params.rows} onChange={params.customRows}/>\r\n                    <label className=\"form-label\" htmlFor=\"formRows\">Rows</label>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4\">\r\n                <div className=\"form-outline\">\r\n                    <input type=\"text\" id=\"formCols\" className=\"form-control\"  onChange={params.customCols}/>\r\n                    <label className=\"form-label\" htmlFor=\"formCols\">Columns</label>\r\n                </div>\r\n                </div>\r\n            <div className=\"col-12 col-sm-4\">\r\n              <div className=\"form-outline\">\r\n                <button onClick={()=>params.setMatrix()} className=\"btn btn-success align-self-start\">Click to make Matrix</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetMatrix;","import React, { useState } from 'react';\nimport './App.css';\nimport Glcm from './components/Glcm';\nimport MakeRandomMatrix from './components/MakeRandomMatrix';\nimport GlcmProperties from './components/GlcmProperties';\nimport SetMatrix from './components/SetMatrix';\n\nfunction App() {\n  var [rows, setRows]=useState(6);\n  var [cols, setCols]=useState(5);\n  var [degreeValue, setDegreeValue] = useState(0)\n  var [distanceValue, setDistnceValue] = useState(2)\n\n  let colourGlcm=[]\n  for(var ii=0;ii<8;ii++){\n      let innerColourGlcm=[]\n      for(var jj=0;jj<8;jj++)\n          innerColourGlcm.push(`#FFFFFF`)\n      colourGlcm.push(innerColourGlcm);\n  }\n  var [GlcmColour,setGlcmColour]=useState(colourGlcm);\n\n\n  var [randomMatrix,setRandomMatrix] =useState(MakeRandomMatrix(6,5));\n\n  var setMatrix=()=>{\n    setDegreeValue(0);\n    setDistnceValue(2);\n    setRandomMatrix(MakeRandomMatrix(rows,cols));\n  };\n\n  const customRows=(event)=>{\n    var num=parseInt(event.target.value);\n    setRows(isNaN(num)?3:num<3?3:num);\n  }\n  const customCols=(event)=>{\n    var num=parseInt(event.target.value);\n    setCols(isNaN(num)?3:num<3?3:num);\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        \n        <SetMatrix cols={cols} rows={rows} customCols={customCols} customRows={customRows} setMatrix={setMatrix}/>\n\n        <GlcmProperties degreeValue={degreeValue} setDegreeValue={setDegreeValue} distanceValue={distanceValue} setDistanceValue={setDistnceValue} rows={rows} cols={cols}/>\n\n        <div className='container'>\n          <div className='row'>\n            <div className=\"col-12\">\n              <div className=\"form-outline\">\n                <Glcm randomMatrix={randomMatrix} degreeValue={degreeValue} distanceValue={distanceValue} GlcmColour={GlcmColour} setGlcmColour={setGlcmColour}/>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}